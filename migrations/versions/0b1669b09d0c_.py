"""empty message

Revision ID: 0b1669b09d0c
Revises: d9178af2341e
Create Date: 2025-03-29 22:33:32.286340

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0b1669b09d0c'
down_revision = 'd9178af2341e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before dropping
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if 'note_writers' in inspector.get_table_names():
        op.drop_table('note_writers')
    
    with op.batch_alter_table('note', schema=None) as batch_op:
        batch_op.add_column(sa.Column('writers', postgresql.JSON(astext_type=sa.Text()), nullable=True))

    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.drop_constraint('fk_player_notes_note', type_='foreignkey')
        batch_op.drop_column('notes')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notes', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_player_notes_note', 'note', ['notes'], ['id'])

    with op.batch_alter_table('note', schema=None) as batch_op:
        batch_op.drop_column('writers')

    op.create_table('note_writers',
    sa.Column('note_id', sa.INTEGER(), nullable=False),
    sa.Column('player_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], name='fk_note_writers_note_id_note'),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], name='fk_note_writers_player_id_player'),
    sa.PrimaryKeyConstraint('note_id', 'player_id', name='pk_note_writers')
    )
    # ### end Alembic commands ###
